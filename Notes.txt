There four types of middleware - 
- Document
- Query
- Aggregate
- Model Middleware


Stopped at;
folder; 9 
video; 10 {can't generate 400 bad responses with invalid path and value} 

Always Doc..


################################################################
HEROKU DEPLOYMENT
================
build.js
heroku login
heroku create
git add .
git commit -am 'Updated'
git push heroku main


Define env variables
================
heroku open // Define env variables before opening
heroku config:set NODE_ENV=production // other variables
heroku open // now open


RENAME APP
================
heroku apps:rename funtours 

HEROKU DYNO
================
heroku ps
heroku ps:restart

heroku logs --tail





helmet({
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ["'self'", 'data:', 'blob:', 'https:', 'ws:'],
        baseUri: ["'self'"],
        fontSrc: ["'self'", 'https:', 'data:'],
        scriptSrc: [
          "'self'",
          'https:',
          'http:',
          'blob:',
          'https://*.mapbox.com',
          'https://js.stripe.com',
          'https://m.stripe.network',
          'https://*.cloudflare.com',
        ],
        frameSrc: ["'self'", 'https://js.stripe.com'],
        objectSrc: ["'none'"],
        styleSrc: ["'self'", 'https:', "'unsafe-inline'"],
        workerSrc: [
          "'self'",
          'data:',
          'blob:',
          'https://*.tiles.mapbox.com',
          'https://api.mapbox.com',
          'https://events.mapbox.com',
          'https://m.stripe.network',
        ],
        childSrc: ["'self'", 'blob:'],
        imgSrc: ["'self'", 'data:', 'blob:'],
        formAction: ["'self'"],
        connectSrc: [
          "'self'",
          "'unsafe-inline'",
          'data:',
          'blob:',
          'https://*.stripe.com',
          'https://*.mapbox.com',
          'https://*.cloudflare.com/',
          'https://bundle.js:*',
          'ws://127.0.0.1:*/',
        ],
        upgradeInsecureRequests: [],
      },
    },
  })